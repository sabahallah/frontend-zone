@mixin  clearfix {
    &::after{
        content: "";
        display: table; /* standard version of clearfix */
        clear: both;
    }
}

@mixin absoulteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}


// MEDIA QUERY MANAGER
/*
These breakoints coming from most popular devices 2017-2018, we grouped them together.

0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

em and rem (in media queries) are not affected by root font-size setting which is >> html { font-size: 62.5%; }
which means 1em or 1rem (in media queries) is equal to the font size coming from the browser itslef which is by default 16px.
but if the user changed the font-size to 20px so it will be 20px no matter what is in base font definition which is >> html { font-size: 62.5%; }
so we're going to use em not rem, because rem failed to work as intended in some of the browsers 
so em is the best option to use in media query here

1em = 16px

ORDER : 
    - BASE AND TYPOGRAPHY
    - GERNERAL LAYOUT (HEADER, FOOTER, NAVIGATION...) + GRID
    - PAGE LAYOUT
    - COMPONENTS
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        // only screen: apply only to screens, if someone wants to print the page media query will not apply
        @media only screen and (max-width: 37.5em) { @content };    // 600px/16px=37.5em
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };     // 900px/16px=56.25em
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };    // 1200px/16px=75em
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    // 1800px/16px=112.5em
    }
}