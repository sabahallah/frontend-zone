////////////////////////////////////////
// LOGO
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

////////////////////////////////////////
// SEARCH
.search {
    flex: 0 0 40%;

    display: flex;
    align-items: center;
    justify-content: center;   

    @media only screen and (max-width: $bp-smallest) {
        order: 1; /* it will be the last one */
        flex: 0 0 100%;
        background-color: var(--color-grey-light-2);
    }

    &__input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        // in order to put the icon image on top of the search box
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    // using the adjacent selector
    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);
        
        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }        
    }

    &__icon {
       height: 2rem;
       width: 2rem;
       // changing svg color
       fill: var(--color-grey-dark-3);
    }
}

////////////////////////////////////////
// USER NAVIGATION
.user-nav {
    // we don't want the nav bar to be centered, we set align-items: center; on flex container. So here we're using align-self
    align-self: stretch;

    display: flex;
    align-items: center;

    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }
    
    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        // changing svg color
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        // flexbox works with text as well
        display: flex;
        justify-content: center;
        align-items: center;
    }
  
    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}



////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: flex;
        margin: 0;
    }

    &__item {
        position: relative;

        /* adding margin-bottom to all items except the last child */
        &:not(:last-child) {
            margin-bottom: .5rem;     
            @media only screen and (max-width: $bp-medium) {
                margin: 0;
            }   
        }

        @media only screen and (max-width: $bp-medium) {
            flex: 1;
        }
    }

    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        /* This is where transition starts, default is center. it will start from center and start scaling up and down. */
        // transform-origin: bottom;

        transition: transform .2s,
                    /* .4s how long it takes to animate, 
                    cubic-bezier is animation timing function,
                    .2s is a delay before start animation */
                    width .4s cubic-bezier(1,0,0,1) .2s, 
                    background-color .1s;
    }

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        position: relative;
        /* only works if we specified position */
        z-index: 10;

        display: flex;
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            justify-content: center;
            padding: 2rem;
        }

        @media only screen and (max-width: $bp-small) {
            flex-direction: column;
            padding: 1.5rem .5rem;
        }
    }

    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        /* setting color of svg, color of parent element */
        fill: currentColor;

        @media only screen and (max-width: $bp-small) {
            margin-right: 0;
            margin-bottom: .7rem;
            width: 1.5rem;
            height: 1.5rem;
        }
    }
}


////////////////////////////////////////
// LEGAL TEXT
.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: none;
    }
}


////////////////////////////////////////
// GALLERY
.gallery {
    display: flex;

    &__photo {
        width: 100%;
        display: block;
    }
}

/***************************** HOTEL OVERVIEW ********************************************/
.overview {
    display: flex;
    align-items: center;
    border-bottom: var(--line);
    /* not the perfect way because we want two items on the right and two items to the left 
        to fix this we set margin-right: auto; to the star element, check below
    */
    // justify-content: space-between;

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem 2rem;
        }
    }

    &__stars {
        // flex: 1;  not ideal because it will occupy the whole available space, imagine we have hover effect, so effect will be applied to whole space
        // background-color: orangered;   
        // very good trick to know with flexbox.
        // if you use margin-right: auto; with flexbox it will occupy only the space that it needs and all remaining space will be margin right
        margin-right: auto;
        
        /* there is small space below each of the stars because it SVGs behave like inline elements, so it a bit like text that produces a small white space under the star
         we can remove this space by setting the line height and font size to 0, but we have a simple way doing this is by setting parent element to display: flex; */
        display: flex;

    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem;
        
        /* parent element is set to to align-items: center; but we want to occupy all the avialable space 
        so we use  align-self: stretch; to override parent setting */
        align-self: stretch; 

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        @media only screen and (max-width: $bp-small) {
            padding: 0 1.5rem;
        }
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
        }
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;

        @media only screen and (max-width: $bp-small) {
            font-size: .5rem;
        }
    }
}


////////////////////////////////////////
// BUTTON INLINE
.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit; /* to inherit the parent font-size */
    border-bottom: 1px solid currentColor; /* when hovering color will change so we need border-bottom to be the same color in any case, so we used currentColor */
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px;
        transition: margin-left .2s;
    }

    &:hover {
        outline: none;
        animation: pulsate 1s infinite;

        color: var(--color-grey-dark-1);

        span {
            margin-left: 8px;
        }
    }

    /* from user experience, pulsate should be while hovering not focus */
    // &:focus {
    //     outline: none;
    //     animation: pulsate 1s infinite;
    // }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}



////////////////////////////////////////
// PARAGRAPH
/* apply to last of the same type of element */
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}


////////////////////////////////////////
// LIST
.list {
    list-style: none;
    margin: 3rem 0;
    padding: 3rem 0;
    border-top: var(--line);
    border-bottom: var(--line);

    display: flex;
    /* to create a new line if there is enough space */
    flex-wrap: wrap;

    &__item {
        /* because we want two elements to be side by side */
        flex: 0 0 50%;
        margin-bottom: .7rem;
    }

    /* adding  icon to the left */
    &__item::before {
        content: "";
        display: inline-block;
        height: 1rem;
        width: 1rem;
        margin-right: .7rem;

        // Older browsers
        background-image: url(../img/chevron-thin-right.svg);
        background-size: cover;

        //Newer browsers - masks
        // Mask defines an area where we can look through the element and see what's behind this element
        @supports (-webkit-mask-image: url()) or (mask-image: url()) {
            background-color: var(--color-primary);
            -webkit-mask-image: url(../img/chevron-thin-right.svg);
            -webkit-mask-size: cover;
            mask-image: url(../img/chevron-thin-right.svg); /* this will be infront of the background color, so you'll see through the svg */
            mask-size: cover;
            background-image: none;
        }        
    }
}

////////////////////////////////////////
// RECOMMEND
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);

    display: flex;
    align-items: center;

    &__count {
        margin-right: auto;
    }

    &__friends {
        display: flex;
    }

    &__photo {
        box-sizing: content-box; /* setting back to default */
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;

        &:not(:last-child) {
            margin-right: -2rem;
        }
    }
}

///////////////////////////////////
// REVIEWS
.review {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden;

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-bottom: 3rem;
    }

    &__text {
        margin-bottom: 2rem;
        /*  z-index:10; works only if you set position */
        z-index: 10;
        position: relative;
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__photo {
        height: 4.5rem;
        width: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box {
        margin-right: auto;
    }

    &__user-name {
        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    &__rating {
        color: var(--color-primary);
        font-size: 2.2rem;
        font-weight: 300;
    }

    &::before {
        /* html entity, check https://css-tricks.com/snippets/html/glyphs/ */
        content: "\201C";
        position: absolute;
        top: -2.75rem;
        left: -1rem;
        line-height: 1;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        /* to look exactly the same as we want */
        font-family: sans-serif;
        z-index: 1;
    }
}


////////////////////////////////////////
// CALL TO ACTION
.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0;
    }

    &__book-now {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}

////////////////////////////////////////
// CALL TO ACTION
.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border-radius: 100px;
    border: none;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: #fff;
    position: relative;
    overflow: hidden; /* to hide the text because it's overflowed */
    cursor: pointer;

    & > * {
        display: inline-block;
        height: 100%;
        width: 100%;
        transition: all .2s;
    }

    &__visible {
        padding: 2rem 7.5rem;
    }

    &__invisible {
        position: absolute; /* using the absolute to put the invisible button above the visible button */
        padding: 2rem 0;
        left: 0;
        top: -100%; /* it will move the element 100% of its size */
    }

    &:hover {
        outline: none;
        animation: pulsate 1s infinite .4s;
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
    }

    &:hover &__visible {
        transform: translateY(100%); /* translate 100% of its height */
    }

    &:hover &__invisible {
        top: 0;
    }

    // &:focus {
    //     outline: none;
    //     animation: pulsate 1s infinite;
    // }
}